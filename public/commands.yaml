# available repl commands
- ':import':
  parsed: "true"
  class: "symbol"
  description: "imports one or more packages"
  usage: ":import <package> [<package>..]"
  example: ":import reflect http"
  also: ":i"
  notice: ""
- ':instances':
  parsed: "true"
  class: "info"
  description: "lists instances in the current scope for the given type spec"
  usage: ":instances <spec>"
  example: ":instances Num"
  also: ":inst"
  notice: ""
- ':type':
  parsed: "true"
  class: "info"
  description: "displays the type of the given expression"
  usage: ":type <expr>"
  example: ":type 1 + 1"
  also: ":t"
  notice: ""
- ':kind':
  parsed: "true"
  class: "info"
  description: "displays the kind of the given expression"
  usage: ":kind <expr>"
  example: ":kind 1 = 1"
  also: ":k"
  notice: ""
- ':help':
  parsed: "false"
  class: "info"
  description: "displays help information for the given topic"
  usage: ":help <topic> [<subtopic>]"
  example: ":help command help"
  also: ":h"
  notice: ""
- ':main':
  parsed: "false"
  class: "control"
  description: "runs the main function in the current scope with the given arguments"
  usage: ":main [<args>..]"
  example: ":main \"build -o hello-world\""
  also: ""
  notice: ""
- ':run':
  parsed: "true"
  class: "control"
  description: "runs the given expression"
  usage: ":run <function>"
  example: ":run helloWorld"
  also: ":r"
  notice: ""
- ':quit':
  parsed: "false"
  class: "control"
  description: "exits the repl session"
  usage: ":quit"
  example: ":quit"
  also: ":q"
  notice: ""
- ':set':
  parsed: "false" 
  class: "control"
  description: "sets the given option to the given value"
  usage: ":set <option> <value>"
  example: ":set prompt \"yew>\""
  also: ""
  notice: ""
- ':api':
  parsed: "true"
  class: "info"
  description: "either: (without sub-command `example`) displays the yew language or compiler api documentation and help for the given interface; or (with sub-command) runs example, if one exists, for the given interface"
  usage: ":api (<interface> | example <interface> | list)"
  example: ":api translator"
  also: ""
  notice: ""
- ':expose':
  parsed: "true"
  class: "info"
  description: "prints available exposed data for the given interface"
  usage: ":expose (tokens <input> | <interface>)"
  example: ":expose parser"
  also: ""
  notice: ""
- ':save':
  parsed: "false"
  class: "state"
  description: "pushes a restore point to an internal history, saving all compiler state"
  usage: ":save"
  example: ":save"
  also: ""
  notice: ""
- ':restore':
  parsed: "false"
  class: "state"
  description: "pops a compiler state from the internal history, restoring the compiler to that state"
  usage: ":restore"
  example: ":restore"
  also: ""
  notice: ""
- ':include':
  class: "source"
  description: "includes a file in the current scope"
  usage: ":include <file>.lit.yew"
  example: ":include ./session.lit.yew"

